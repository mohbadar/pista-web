{"version":3,"file":"ngx-highlightjs.js","sources":["ng:/ngx-highlightjs/lib/highlight.model.ts","ng:/ngx-highlightjs/lib/highlight.service.ts","ng:/ngx-highlightjs/lib/highlight.ts","ng:/ngx-highlightjs/lib/highlight-children.ts","ng:/ngx-highlightjs/lib/highlight.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const HIGHLIGHT_OPTIONS = new InjectionToken<HighlightOptions>('HIGHLIGHT_OPTIONS');\r\n\r\nexport interface HighlightOptions {\r\n  languages?: Function;\r\n  config?: HighlightConfig;\r\n}\r\n\r\nexport interface HighlightLanguage {\r\n  name: string;\r\n  func: Function;\r\n}\r\n\r\nexport interface HighlightConfig {\r\n  /** tabReplace: a string used to replace TAB characters in indentation. */\r\n  tabReplace?: string;\r\n  /** useBR: a flag to generate <br> tags instead of new-line characters in the output, useful when code is marked up using a non-<pre> container. */\r\n  useBR?: boolean;\r\n  /** classPrefix: a string prefix added before class names in the generated markup, used for backwards compatibility with stylesheets. */\r\n  classPrefix?: string;\r\n  /** languages: an array of language names and aliases restricting auto detection to only these languages. */\r\n  languages?: string[];\r\n}\r\n\r\nexport interface HighlightResult {\r\n  language?: string;\r\n  r?: number;\r\n  second_best?: any;\r\n  top?: any;\r\n  value?: string;\r\n}\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HighlightConfig, HighlightResult, HighlightLanguage, HighlightOptions, HIGHLIGHT_OPTIONS } from './highlight.model';\r\nimport hljs from 'highlight.js/lib/highlight.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HighlightJS {\r\n  constructor(@Optional() @Inject(HIGHLIGHT_OPTIONS) options: HighlightOptions) {\r\n    if (options) {\r\n      // Register HighlightJS languages\r\n      options.languages().map((language: HighlightLanguage) =>\r\n        this.registerLanguage(language.name, language.func)\r\n      );\r\n      if (options.config) {\r\n        // Set global config if present\r\n        this.configure(options.config);\r\n      }\r\n    }\r\n    // Throw an error if no languages were registered.\r\n    if (this.listLanguages().length < 1) {\r\n      throw new Error('[HighlightJS]: No languages were registered!');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Core highlighting function.\r\n   * @param name Accepts a language name, or an alias\r\n   * @param value A string with the code to highlight.\r\n   * @param ignore_illegals When present and evaluates to a true value, forces highlighting to finish\r\n   * even in case of detecting illegal syntax for the language instead of throwing an exception.\r\n   * @param continuation An optional mode stack representing unfinished parsing.\r\n   * When present, the function will restart parsing from this state instead of initializing a new one\r\n   */\r\n  highlight(name: string, value: string, ignore_illegals: boolean, continuation?: any): HighlightResult {\r\n    return hljs.highlight(name, value, ignore_illegals, continuation);\r\n  }\r\n\r\n  /**\r\n   * Highlighting with language detection.\r\n   * @param value Accepts a string with the code to highlight\r\n   * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\r\n  highlightAuto(value: string, languageSubset: string[]): HighlightResult {\r\n    return hljs.highlightAuto(value, languageSubset);\r\n  }\r\n\r\n  /**\r\n   * Post-processing of the highlighted markup.\r\n   * Currently consists of replacing indentation TAB characters and using <br> tags instead of new-line characters.\r\n   * Options are set globally with configure.\r\n   * @param value Accepts a string with the highlighted markup\r\n   */\r\n  fixMarkup(value: string): string {\r\n    return hljs.fixMarkup(value);\r\n  }\r\n\r\n  /**\r\n   * Applies highlighting to a DOM node containing code.\r\n   * The function uses language detection by default but you can specify the language in the class attribute of the DOM node.\r\n   * See the class reference for all available language names and aliases.\r\n   * @param block The element to apply highlight on.\r\n   */\r\n  highlightBlock(block: HTMLElement) {\r\n    hljs.highlightBlock(block);\r\n  }\r\n\r\n  /**\r\n   * Configures global options:\r\n   * @param config\r\n   */\r\n  configure(config: HighlightConfig) {\r\n    hljs.configure(config);\r\n  }\r\n\r\n  /**\r\n   * Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\r\n   */\r\n  initHighlighting() {\r\n    hljs.initHighlighting();\r\n  }\r\n\r\n  /**\r\n   * Adds new language to the library under the specified name. Used mostly internally.\r\n   * @param name A string with the name of the language being registered\r\n   * @param language A function that returns an object which represents the language definition.\r\n   * The function is passed the hljs object to be able to use common regular expressions defined within it.\r\n   */\r\n  registerLanguage(name: string, language: Function) {\r\n    hljs.registerLanguage(name, language);\r\n  }\r\n\r\n  /**\r\n   * @return The languages names list.\r\n   */\r\n  listLanguages(): string[] {\r\n    return hljs.listLanguages();\r\n  }\r\n\r\n  /**\r\n   * Looks up a language by name or alias.\r\n   * @param name Language name\r\n   * @return The language object if found, undefined otherwise.\r\n   */\r\n  getLanguage(name: string): any {\r\n    return hljs.getLanguage(name);\r\n  }\r\n}\r\n","import { Directive, Input, Output, OnChanges, SimpleChanges, EventEmitter, NgZone } from '@angular/core';\r\nimport { HighlightJS } from './highlight.service';\r\nimport { HighlightResult } from './highlight.model';\r\n\r\n@Directive({\r\n  host: {\r\n    '[class.hljs]': 'true',\r\n    '[innerHTML]': 'highlightedCode'\r\n  },\r\n  selector: '[highlight]'\r\n})\r\nexport class Highlight implements OnChanges {\r\n\r\n  /** Highlighted Code */\r\n  highlightedCode: string;\r\n\r\n  /** An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\r\n  @Input() languages: string[];\r\n\r\n  /** Highlight code input */\r\n  @Input('highlight') code;\r\n\r\n  /** Stream that emits when code string is highlighted */\r\n  @Output() highlighted = new EventEmitter<HighlightResult>();\r\n\r\n  constructor(private _hljs: HighlightJS, private _zone: NgZone) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (\r\n      changes['code'] &&\r\n      changes['code'].currentValue !== changes['code'].previousValue\r\n    ) {\r\n      this.highlightElement(this.code, this.languages);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Highlighting with language detection and fix markup.\r\n   * @param value Accepts a string with the code to highlight\r\n   * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\r\n   * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n   */\r\n  highlightElement(code: string, languages?: string[]) {\r\n    this._zone.runOutsideAngular(() => {\r\n      const res = this._hljs.highlightAuto(code, languages);\r\n      this.highlightedCode = res.value;\r\n      this.highlighted.emit(res);\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, Inject, OnInit, OnDestroy, Renderer2, ElementRef, NgZone, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { HighlightJS } from './highlight.service';\r\n\r\n@Directive({\r\n  selector: '[highlightChildren]'\r\n})\r\nexport class HighlightChildren implements OnInit, OnDestroy {\r\n\r\n  @Input('highlightChildren') selector: string;\r\n  private _observer: any;\r\n\r\n  constructor(private _zone: NgZone,\r\n              private _el: ElementRef,\r\n              private _hljs: HighlightJS,\r\n              private _renderer: Renderer2,\r\n              @Inject(PLATFORM_ID) private _platformId: Object) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (isPlatformBrowser(this._platformId)) {\r\n      // Subscribe to host element content changes\r\n      this._zone.runOutsideAngular(() => {\r\n        this._observer = new MutationObserver(() =>\r\n          this.highlightChildren(this.selector)\r\n        );\r\n\r\n        this._observer.observe(this._el.nativeElement, {\r\n          childList: true\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Highlight a code block\r\n   * @param el Code block element\r\n   */\r\n  highlightElement(el: HTMLElement) {\r\n    this._hljs.highlightBlock(el);\r\n    this._renderer.addClass(el, 'hljs');\r\n  }\r\n\r\n  /**\r\n   * Highlight multiple code blocks\r\n   * @param selector elements selector\r\n   */\r\n  highlightChildren(selector: string) {\r\n    const elementsToHighlight = this._el.nativeElement.querySelectorAll(selector || 'pre code');\r\n\r\n    elementsToHighlight.forEach((element: HTMLElement) => {\r\n      // Highlight element when text is present\r\n      if (\r\n        element.childNodes.length === 1 &&\r\n        element.childNodes[0].nodeName === '#text'\r\n      ) {\r\n        this.highlightElement(element);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._observer) {\r\n      this._observer.disconnect();\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { Highlight } from './highlight';\r\nimport { HighlightChildren } from './highlight-children';\r\nimport { HighlightOptions, HIGHLIGHT_OPTIONS } from './highlight.model';\r\n\r\n@NgModule({\r\n  declarations: [Highlight, HighlightChildren],\r\n  exports: [Highlight, HighlightChildren]\r\n})\r\nexport class HighlightModule {\r\n  static forRoot(options: HighlightOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: HighlightModule,\r\n      providers: [\r\n        {provide: HIGHLIGHT_OPTIONS, useValue: options}\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}