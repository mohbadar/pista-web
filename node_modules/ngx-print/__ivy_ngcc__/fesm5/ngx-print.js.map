{"version":3,"file":"ngx-print.js","sources":["ng:/ngx-print/lib/ngx-print.directive.ts","ng:/ngx-print/lib/ngx-print.module.ts"],"names":["tslib_1.__values"],"mappings":"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","sourcesContent":["import { Directive, HostListener, Input } from '@angular/core';\n@Directive({\n  selector: \"button[ngxPrint]\"\n})\nexport class NgxPrintDirective {\n\n  public _printStyle = [];\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() printSectionId: string;\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() printTitle: string;\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() useExistingCss = false;\n\n  /**\n   * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() printDelay: number = 0;\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input()\n  set printStyle(values: { [key: string]: { [key: string]: string } }) {\n    for (let key in values) {\n      if (values.hasOwnProperty(key)) {\n      this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\n      }\n    }\n    this.returnStyleValues();\n  }\n\n/**\n *\n *\n * @returns the string that create the stylesheet which will be injected\n * later within <style></style> tag.\n *\n * -join/replace to transform an array objects to css-styled string\n *\n * @memberof NgxPrintDirective\n */\npublic returnStyleValues() {\n  return `<style> ${this._printStyle.join(' ').replace(/,/g,';')} </style>`;\n  }\n\n  /**\n   *\n   *\n   * @returns html for the given tag\n   *\n   * @memberof NgxPrintDirective\n   */\n  private _styleSheetFile = '';\n\n  /**\n   * @memberof NgxPrintDirective\n   * @param cssList\n   */\n  @Input()\n  set styleSheetFile(cssList: string) {\n    let linkTagFn = function(cssFileName) {\n      return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\n    }\n    if (cssList.indexOf(',') !== -1) {\n      const valueArr = cssList.split(',');\n      for (let val of valueArr) {\n        this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\n      }\n    } else {\n      this._styleSheetFile = linkTagFn(cssList);\n    }\n  }\n\n  /**\n   * @returns string which contains the link tags containing the css which will\n   * be injected later within <head></head> tag.\n   *\n   */\n  private returnStyleSheetLinkTags() {\n    return this._styleSheetFile;\n  }\n  private getElementTag(tag: keyof HTMLElementTagNameMap): string {\n    const html: string[] = [];\n    const elements = document.getElementsByTagName(tag);\n    for (let index = 0; index < elements.length; index++) {\n      html.push(elements[index].outerHTML);\n    }\n    return html.join('\\r\\n');\n  }\n\n  /**\n   * @returns html section to be printed along with some associated inputs\n   * \n   */\n  private getHtmlContents() {\n    let printContents = document.getElementById(this.printSectionId);\n    let innards = printContents.getElementsByTagName('input');\n    for(var i = 0; i < innards.length; i++) {\n      innards[i].defaultValue = innards[i].value;\n    }\n    return printContents.innerHTML;\n  }\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @HostListener('click')\n  public print(): void {\n    let printContents, popupWin, styles = '', links = '';\n\n    if(this.useExistingCss) {\n      styles = this.getElementTag('style');\n      links = this.getElementTag('link');\n    }\n\n    printContents = this.getHtmlContents();\n    popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\n          ${this.returnStyleValues()}\n          ${this.returnStyleSheetLinkTags()}\n          ${styles}\n          ${links}\n        </head>\n        <body>\n          ${printContents}\n          <script defer>\n            function triggerPrint(event) {\n              window.removeEventListener('load', triggerPrint, false);\n              setTimeout(function() {\n                window.print();\n                setTimeout(function() { window.close(); }, 0);\n              }, ${this.printDelay});\n            }\n            window.addEventListener('load', triggerPrint, false);\n          </script>\n        </body>\n      </html>`);\n    popupWin.document.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxPrintDirective } from './ngx-print.directive';\n\n@NgModule({\n  declarations: [NgxPrintDirective],\n  imports: [\n  ],\n  exports: [NgxPrintDirective]\n})\nexport class NgxPrintModule { }\n"]}