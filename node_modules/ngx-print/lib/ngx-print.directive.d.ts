import * as ɵngcc0 from '@angular/core';
export declare class NgxPrintDirective {
    _printStyle: any[];
    /**
     *
     *
     * @memberof NgxPrintDirective
     */
    printSectionId: string;
    /**
     *
     *
     * @memberof NgxPrintDirective
     */
    printTitle: string;
    /**
     *
     *
     * @memberof NgxPrintDirective
     */
    useExistingCss: boolean;
    /**
     * A delay in milliseconds to force the print dialog to wait before opened. Default: 0
     *
     * @memberof NgxPrintDirective
     */
    printDelay: number;
    /**
     *
     *
     * @memberof NgxPrintDirective
     */
    printStyle: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     *
     *
     * @returns the string that create the stylesheet which will be injected
     * later within <style></style> tag.
     *
     * -join/replace to transform an array objects to css-styled string
     *
     * @memberof NgxPrintDirective
     */
    returnStyleValues(): string;
    /**
     *
     *
     * @returns html for the given tag
     *
     * @memberof NgxPrintDirective
     */
    private _styleSheetFile;
    /**
     * @memberof NgxPrintDirective
     * @param cssList
     */
    styleSheetFile: string;
    /**
     * @returns string which contains the link tags containing the css which will
     * be injected later within <head></head> tag.
     *
     */
    private returnStyleSheetLinkTags;
    private getElementTag;
    /**
     * @returns html section to be printed along with some associated inputs
     *
     */
    private getHtmlContents;
    /**
     *
     *
     * @memberof NgxPrintDirective
     */
    print(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPrintDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgxPrintDirective, "button[ngxPrint]", never, { "useExistingCss": "useExistingCss"; "printDelay": "printDelay"; "printStyle": "printStyle"; "styleSheetFile": "styleSheetFile"; "printSectionId": "printSectionId"; "printTitle": "printTitle"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXByaW50LmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJuZ3gtcHJpbnQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hQcmludERpcmVjdGl2ZSB7XG4gICAgX3ByaW50U3R5bGU6IGFueVtdO1xuICAgIC8qKlxuICAgICAqXG4gICAgICpcbiAgICAgKiBAbWVtYmVyb2YgTmd4UHJpbnREaXJlY3RpdmVcbiAgICAgKi9cbiAgICBwcmludFNlY3Rpb25JZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqXG4gICAgICpcbiAgICAgKiBAbWVtYmVyb2YgTmd4UHJpbnREaXJlY3RpdmVcbiAgICAgKi9cbiAgICBwcmludFRpdGxlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKlxuICAgICAqIEBtZW1iZXJvZiBOZ3hQcmludERpcmVjdGl2ZVxuICAgICAqL1xuICAgIHVzZUV4aXN0aW5nQ3NzOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEEgZGVsYXkgaW4gbWlsbGlzZWNvbmRzIHRvIGZvcmNlIHRoZSBwcmludCBkaWFsb2cgdG8gd2FpdCBiZWZvcmUgb3BlbmVkLiBEZWZhdWx0OiAwXG4gICAgICpcbiAgICAgKiBAbWVtYmVyb2YgTmd4UHJpbnREaXJlY3RpdmVcbiAgICAgKi9cbiAgICBwcmludERlbGF5OiBudW1iZXI7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKlxuICAgICAqIEBtZW1iZXJvZiBOZ3hQcmludERpcmVjdGl2ZVxuICAgICAqL1xuICAgIHByaW50U3R5bGU6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXToge1xuICAgICAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgLyoqXG4gICAgICpcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBzdHJpbmcgdGhhdCBjcmVhdGUgdGhlIHN0eWxlc2hlZXQgd2hpY2ggd2lsbCBiZSBpbmplY3RlZFxuICAgICAqIGxhdGVyIHdpdGhpbiA8c3R5bGU+PC9zdHlsZT4gdGFnLlxuICAgICAqXG4gICAgICogLWpvaW4vcmVwbGFjZSB0byB0cmFuc2Zvcm0gYW4gYXJyYXkgb2JqZWN0cyB0byBjc3Mtc3R5bGVkIHN0cmluZ1xuICAgICAqXG4gICAgICogQG1lbWJlcm9mIE5neFByaW50RGlyZWN0aXZlXG4gICAgICovXG4gICAgcmV0dXJuU3R5bGVWYWx1ZXMoKTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBodG1sIGZvciB0aGUgZ2l2ZW4gdGFnXG4gICAgICpcbiAgICAgKiBAbWVtYmVyb2YgTmd4UHJpbnREaXJlY3RpdmVcbiAgICAgKi9cbiAgICBwcml2YXRlIF9zdHlsZVNoZWV0RmlsZTtcbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgTmd4UHJpbnREaXJlY3RpdmVcbiAgICAgKiBAcGFyYW0gY3NzTGlzdFxuICAgICAqL1xuICAgIHN0eWxlU2hlZXRGaWxlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQHJldHVybnMgc3RyaW5nIHdoaWNoIGNvbnRhaW5zIHRoZSBsaW5rIHRhZ3MgY29udGFpbmluZyB0aGUgY3NzIHdoaWNoIHdpbGxcbiAgICAgKiBiZSBpbmplY3RlZCBsYXRlciB3aXRoaW4gPGhlYWQ+PC9oZWFkPiB0YWcuXG4gICAgICpcbiAgICAgKi9cbiAgICBwcml2YXRlIHJldHVyblN0eWxlU2hlZXRMaW5rVGFncztcbiAgICBwcml2YXRlIGdldEVsZW1lbnRUYWc7XG4gICAgLyoqXG4gICAgICogQHJldHVybnMgaHRtbCBzZWN0aW9uIHRvIGJlIHByaW50ZWQgYWxvbmcgd2l0aCBzb21lIGFzc29jaWF0ZWQgaW5wdXRzXG4gICAgICpcbiAgICAgKi9cbiAgICBwcml2YXRlIGdldEh0bWxDb250ZW50cztcbiAgICAvKipcbiAgICAgKlxuICAgICAqXG4gICAgICogQG1lbWJlcm9mIE5neFByaW50RGlyZWN0aXZlXG4gICAgICovXG4gICAgcHJpbnQoKTogdm9pZDtcbn1cbiJdfQ==